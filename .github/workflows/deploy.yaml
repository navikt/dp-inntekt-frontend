name: Build and deploy

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: write
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: teamdagpenger
          push_image: true
          dockerfile: Dockerfile
          docker_context: .
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          build_secrets: NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}
      - name: Build static files
        uses: docker/build-push-action@v6
        with:
          target: export
          outputs: type=local,dest=build
          secrets: NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}
      - name: Upload static files
        uses: nais/deploy/actions/cdn-upload/v2@master
        with:
          team: teamdagpenger
          source: ./build/client
          destination: '/dp-inntekt-frontend/'
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy-dev:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          VAR: image=${{ needs.build.outputs.image }},githubSha=${{ github.sha }}
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/vars-dev.yaml
          PRINT_PAYLOAD: true


